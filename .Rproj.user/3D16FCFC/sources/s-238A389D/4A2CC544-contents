plotFunction <- function(df,user){
 return (renderPlot({
    barplot(table(df[df$User==user,"Type"]),main="Number of cigarettes per type")
  }) )
}

engagement <- function(df){
  x <- df[c("User","Week")]
  x <- data.frame(table(x))
  y <-x[x$Freq>0,c("Freq","Week")]
  y <- table(y$Week)
  y <- as.numeric(y)
  y <- y/36*100
  y <- y[!is.infinite(y)]
  z <- 1:length(y)
  lo <- loess(y~z)
  return (renderPlot({
    plot(y, main="Engagement", xlab = "Week number",ylab = "Engagement (%)")
     lines(predict(lo),type="l",col="red")
  }))
}

progPerAgeBin <- function(df1, df2){
  temp1 <- df1[c("User","Type","WeekNumber")]
  df2 <- plyr::rename(df2,c("Name"="User"))
  temp2 <- df2[c("Age","User")]
  temp3 <- unique(df1[c("User")])
  temp2 <- merge(x = temp2, y = temp3, by = "User")
  
  interv <- pretty(temp2$Age)
  temp <- cut(temp2$Age, breaks=interv, right = FALSE)
  
  temp2$Age <- temp
  freqByBin <- temp2
  
  freqByBin[freqByBin==0] <- NA
  freqByBin <- na.omit(freqByBin)
  freqByBin <- data.frame(table(freqByBin$Age))
  df3 <- merge(x = temp1, y = temp2, by = "User")
  df5 <- df3[c("Type","Age")]
  df3 <- df3[c("User","Type","Age", "WeekNumber")]
  df4 <- aggregate(df3$WeekNumber, by = list(df3$Age,df3$User), max)
  df4 <- aggregate(df4$x,by = list(df4$Group.1), mean)
  df5 <- data.frame(table(df5))
  
  y <-df5[df5$Type=="Cheated","Freq"]+df5[df5$Type=="On time","Freq"]
  y <- y[y!=0]
  y <- y/df4$x
  freqByBin <- freqByBin[freqByBin$Freq!=0,c("Var1","Freq")]
  y <- y/freqByBin$Freq
  
  behavior <- df5[df5$Type=="Behaviour","Freq"]
  behavior <- behavior[behavior!=0]
  y <- (behavior-y)/behavior*100
  y[is.infinite(y)]<-0
  names(y)=freqByBin$Var1

  return (renderPlot({
    barplot(y,main="Progress per age bin compared to the behavior week",xlab = "Age bin",ylab = "Progress rate (%)")
    
  }))
}



progRate <- function(df,user){
  tryCatch(
    {
      x <- df[c("User","Type","WeekNumber")]
      x <- data.frame(table(x))
      x <- x[x$User==user,c("User","Type","WeekNumber","Freq")]
      y <-x[x$Type=="Cheated","Freq"]+x[x$Type=="On time","Freq"]
      y <- y[y!=0]
      behavior <- (sum(x[x$Type=="Behaviour","Freq"]))
      y <- (behavior-y)/behavior*100
      y <- y[!is.infinite(y)]
      
      z <- 1:length(y)
      lo <- loess(y~z)
  return (renderPlot({
    plot(y, main="Average progress rate per week", xlab = "Week number",ylab = "Progress rate (%)")
    lines(predict(lo),type="l",col="red")}))
    },
  error = function(e) {})
  
}

dailyCons <- function(df){
  df1 <- df[c("User","Day")]
  df2 <- data.frame(table(df1))
  df2$Day <- factor(df2$Day, levels = c("Monday","Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
  df2 <- df2[order(df2$Day), ]
  return (renderPlot({boxplot(Freq ~ Day,df2,main="Mean and Std of Cigarette Consumption per weekday")}))
}